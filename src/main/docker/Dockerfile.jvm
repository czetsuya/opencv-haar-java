####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the container image run:
#
# ./mvnw package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/hacarus-toy-backend-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/hacarus-toy-backend-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050
#
# Then run the container using :
#
# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" quarkus/hacarus-toy-backend-jvm
#
###
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive LANG='en_US.UTF-8' LANGUAGE='en_US:en' JAVA_HOME='/usr/lib/jvm/java-11-openjdk-amd64/'
ARG JAVA_PACKAGE=openjdk-11-jdk-headless
ARG RUN_JAVA_VERSION=1.3.8

# Install java and the run-java script
# Also set up permissions for user `1001`
RUN apt-get update \
    && apt-get -y install curl ca-certificates cmake git ant ${JAVA_PACKAGE} python3-pip python3-opencv \
    && pip3 install opencv-python \
    && export JAVA_HOME \
    && mkdir /deployments \
    && chown 1001 /deployments \
    && chmod "g+rwX" /deployments \
    && chown 1001:root /deployments \
    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \
    && chown 1001 /deployments/run-java.sh \
    && chmod 540 /deployments/run-java.sh

# Build the OpenCV libraries
RUN git clone https://github.com/opencv/opencv.git \
    && cd opencv \
    && git checkout tags/4.5.1 -b 4.5.1 \
    && mkdir build \
    && cd build \
    && cmake -D BUILD_SHARED_LIBS=OFF .. \
    && make -j8

# Copy the OpenCV library to make it available in the JVM
COPY src/main/resources/opencvlib/*.so /usr/lib/

# Copy the stop image
RUN mkdir -p /deployments/src/main/resources
COPY src/main/resources/*.jpg /deployments/src/main/resources/
COPY src/main/resources/*.xml /deployments/src/main/resources/

# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
COPY target/lib/* /deployments/lib/
COPY target/*-runner.jar /deployments/app.jar

RUN ls /deployments

EXPOSE 8080
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]
